import socket
import logging
from datetime import datetime

# Configure logging for unauthorized IPs only
logging.basicConfig(
    filename='honeypot.log',
    level=logging.INFO,
    format='%(asctime)s [HONEYPOT] %(message)s'
)

# Define allowed IPs
ALLOWED_IPS = ['192.168.1.100']  # Replace with your allowed client IP(s)

# SSH port to mimic (22)
PORT = 22
BUFFER_SIZE = 1024

def handle_connection(client_socket, client_address):
    ip = client_address[0]
    print(f"[+] Connection from: {ip}")

    if ip not in ALLOWED_IPS:
        # Unauthorized: Log and mimic SSH
        logging.info(f"Unauthorized access attempt from {ip}")
        fake_ssh_banner = "SSH-2.0-OpenSSH_7.4p1 Debian-10+deb9u7\r\n"
        client_socket.sendall(fake_ssh_banner.encode())

    client_socket.close()

def start_server():
    server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)

    try:
        server.bind(("0.0.0.0", PORT))
        server.listen(5)
        print(f"[+] Honeypot listening on port {PORT}...")

        while True:
            client_socket, client_address = server.accept()
            handle_connection(client_socket, client_address)

    except Exception as e:
        print(f"[!] Error: {e}")
    finally:
        server.close()

if _name_ == "_main_":
    start_server()
