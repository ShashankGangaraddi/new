# firewall_honeypot.py
import logging
import socket
import threading
from netfilterqueue import NetfilterQueue
from scapy.all import IP, TCP

BLOCKED_IP = "192.168.50.100"
SSH_PORT = 22

# Set up logging
logging.basicConfig(filename='honeypot.log',
                    format='%(asctime)s [HONEYPOT] %(message)s',
                    level=logging.INFO)

def send_fake_ssh_banner(client_ip):
    """Creates a fake SSH listener for blocked IP."""
    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.bind(("0.0.0.0", SSH_PORT))
        sock.listen(1)

        while True:
            conn, addr = sock.accept()
            if addr[0] == BLOCKED_IP:
                banner = b"SSH-2.0-OpenSSH_8.2p1 Ubuntu-4ubuntu0.3\r\n"
                conn.sendall(banner)
                conn.close()
    except Exception as e:
        print(f"[!] Error in fake SSH: {e}")

def process_packet(packet):
    payload = packet.get_payload()
    pkt = IP(payload)

    if pkt.haslayer(TCP):
        src_ip = pkt[IP].src
        dst_port = pkt[TCP].dport

        print(f"[INFO] Connection attempt from {src_ip}:{dst_port}")

        # Block and mimic only if IP is the blocked one and port is 22
        if src_ip == BLOCKED_IP and dst_port == SSH_PORT:
            logging.info(f"Unauthorized SSH attempt from {src_ip}")
            packet.drop()
        else:
            packet.accept()
    else:
        packet.accept()

def main():
    print("[*] Starting firewall and honeypot...")

    # Start fake SSH thread
    ssh_thread = threading.Thread(target=send_fake_ssh_banner, daemon=True)
    ssh_thread.start()

    # Bind NetfilterQueue
    nfqueue = NetfilterQueue()
    nfqueue.bind(1, process_packet)
    try:
        nfqueue.run()
    except KeyboardInterrupt:
        print("\n[!] Stopping firewall.")
        nfqueue.unbind()

if _name_ == "_main_":
    main()
