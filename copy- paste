# firewall_honeypot.py
import logging
from netfilterqueue import NetfilterQueue
from scapy.all import IP, TCP, send

# Setup logging for unauthorized attempts only
logging.basicConfig(
    filename="honeypot.log",
    level=logging.INFO,
    format="%(asctime)s [HONEYPOT] %(message)s"
)

# Configuration
BLOCKED_IP = "192.168.50.100"
SSH_PORT = 22

def process_packet(packet):
    payload = packet.get_payload()
    pkt = IP(payload)

    if pkt.haslayer(TCP) and pkt.haslayer(IP):
        src_ip = pkt[IP].src
        dst_ip = pkt[IP].dst
        dst_port = pkt[TCP].dport
        sport = pkt[TCP].sport
        flags = pkt[TCP].flags

        # Show all IPs accessing
        print(f"[ACCESS] {src_ip} --> port {dst_port}")

        if dst_port == SSH_PORT:
            if src_ip == BLOCKED_IP:
                # Fake response: mimic SSH banner if it's SYN
                if flags == "S":
                    print(f"[HONEYPOT] Unauthorized SSH access from {src_ip}")
                    logging.info(f"Unauthorized SSH access from {src_ip}")

                    fake_response = IP(dst=src_ip, src=dst_ip) / \
                                    TCP(dport=sport, sport=SSH_PORT, seq=12345, ack=pkt[TCP].seq + 1, flags="SA")
                    send(fake_response, verbose=0)
                # Drop the packet
                packet.drop()
                return

    # Accept all others
    packet.accept()

# Setup NFQUEUE
nfqueue = NetfilterQueue()
nfqueue.bind(1, process_packet)

print("[*] Firewall + Honeypot is running...")

try:
    nfqueue.run()
except KeyboardInterrupt:
    print("\n[*] Stopping firewall.")
    nfqueue.unbind()
