import logging
import socket
import threading
from netfilterqueue import NetfilterQueue
from scapy.all import IP, TCP, send

# Configuration
SSH_PORT = 22
BLOCKED_IP = "192.168.50.100"
LOG_FILE = "honeypot.log"

# Setup logging
logging.basicConfig(
    filename=LOG_FILE,
    format='%(asctime)s [HONEYPOT] %(message)s',
    level=logging.INFO
)

# Fake SSH banner sender
def send_fake_ssh_banner(client_ip):
    try:
        # Create a fake TCP server socket
        server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        server_socket.bind(("0.0.0.0", SSH_PORT))
        server_socket.listen(1)

        print(f"[HONEYPOT] Fake SSH server running for {client_ip}...")

        conn, addr = server_socket.accept()
        banner = "SSH-2.0-OpenSSH_7.4p1 Debian-10+deb9u7\r\n"
        conn.sendall(banner.encode())
        conn.close()
        server_socket.close()
    except Exception as e:
        print(f"[HONEYPOT ERROR] Could not send fake SSH banner to {client_ip}: {e}")

# Packet handler
def packet_callback(pkt):
    scapy_pkt = IP(pkt.get_payload())

    if scapy_pkt.haslayer(TCP) and scapy_pkt[TCP].dport == SSH_PORT:
        src_ip = scapy_pkt[IP].src
        print(f"[ACCESS] {src_ip} --> port 22")

        if src_ip == BLOCKED_IP:
            print(f"[HONEYPOT] Unauthorized IP {src_ip} tried to connect to SSH. Logging and faking response.")
            logging.info(f"Unauthorized SSH access attempt from {src_ip}")
            
            # Drop the real packet
            pkt.drop()

            # Send fake SSH banner in a thread
            thread = threading.Thread(target=send_fake_ssh_banner, args=(src_ip,))
            thread.start()
            return

    # Accept allowed traffic
    pkt.accept()

# Main function
def main():
    print("[*] Starting firewall and honeypot...")
    nfqueue = NetfilterQueue()
    nfqueue.bind(1, packet_callback)
    try:
        nfqueue.run()
    except KeyboardInterrupt:
        print("\n[*] Stopping firewall.")
        nfqueue.unbind()

if _name_ == "_main_":
    main()
